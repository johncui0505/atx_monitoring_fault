---
- hosts: aci
  connection: local
  gather_facts: False

  vars:
    apic_info: &apic_info
      host:           "{{ aci_host }}"
      user:           "{{ aci_user }}"
      password:       "{{ aci_password }}"
      validate_certs: "{{ aci_valid_cert }}" 
      use_ssl:        "{{ aci_use_ssl }}" 

  tasks:
    - name: "1] API 호출 - 시스템 Fault 요약 수집"
      aci_rest:
        <<: *apic_info
        path:   "/api/node/class/faultSummary.json?query-target-filter=or(eq(faultSummary.severity,\"critical\"),eq(faultSummary.severity,\"major\"))&order-by=faultSummary.severity|desc"
        method: get
      register: faults_system
    
    - name: "2] (OPTIONAL) 수집 데이터를 Json 파일로 저장"
      copy:
        content: "{{ faults_system | to_nice_json}}"
        dest:    "./faults_system.json"

    - name: "3] 추가 변수 설정 - 메시지 추가 제목"
      set_fact:
        add_title: "시스템 Fault 정보"

    - name: "4] 수집한 데이터를 Webex 메시지 형태의 파일로 변환 (Markdown 포맷)"
      template: 
        src:  "template/faults_report.j2"
        dest: "faults_report.md"

    - name: "5] Webex로 전송할 메시지 파일 읽기"
      debug:    msg="{{lookup('file', 'faults_report.md') }}"
      register: faults_report
      no_log:   yes 

    - name: "6] Webex로 메시지 전송"
      cisco_spark:
        recipient_type: roomId
        recipient_id:   "{{ roomID }}"
        message_type:   markdown
        personal_token: "{{ token }}"
        message:        "{{ faults_report.msg }}"